
[LIF8] FrontEnd Components For Sound Control & Recording Created: 15/Nov/17  Updated: 15/Nov/17Component/s: NoneAffects Version/s: NoneFix Version/s: None Description   Project Pitch: The project (codename: P6RLIC) provides set of tools that help content creators (Podcasters, Radio Interview Hosts, Enterprise Marketing Folks,Panel Moderators etc) produce content rapidly. Audio content can be quickly planned and remotely recorded in a time efficient way with a distributedteam. P6RLIC enhances the productivity of Interview or show hosts and also gives flexibility for guests to easily collaborate remotely in order to ensurehigh quality of output.Imagine you are an interview host who can plan & record a content seamlessly with a busy celebrity guest without the hassle of coordinating recordingsessions/editing/retakes.How it all works?P6RLIC has two modes in the user interface. Planner Mode & Studio Mode.  Here is one of the indicative user journey that explains how the Host will create a project , plan the content and record it:https://www.youtube.com/watch?v=cGwnkd41X2Q**Planner Mode** : In Planner Mode, the UI allows user to plan the interview content. A menu offers the user to add/remove content items in asequence within content tray. User can configure each content item (Intro Jingle, Voice, Ad, End Jingle). Using Dragndrop user can resize the contentitem length and can change the sequence as wel. When user configures the content item (i.e by selecting a jingle to play and permission on who canedit it), it becomes ready to be played and the audio waveform visualization appears on top in specified area. (The interaction of planner widget aredescribed in this Interaction Flow as reference (the final version will be way more elegant than what you see here) : https://youtu.be/hO26y9sCtto )**Studio Mode** : Once the content has been planned in Planner mode (which includes approx timing, content elements like Jingles, Ads & Host/GuestVoices in a sequence), The Studio mode allows the individual user (either Host or Guest) to perform the recording of their own parts of interview (theirvoices ) at their convenience. User can play the sequence to see how their recording is blending with other pieces (like jingles or other users voices)and if needed take multiple retakes before it can be finalized. The prompter allows them to write down the text they will speak in the recording. Prompteris a text area where the content auto scroll the the recording is going on.Task Requirement: In this task we would like you to help build the audio related functionality to support the above mentioned product features. This involves creating codedesign & architecture of different javascript objects that will help create a scalable audio handling using JS webaudio api based features of the browser.Functionality Required: 1.) JS Classes/Objects that defines ContentItem (Primary Class) and VoiceItem (inherited from ContentItem), JingleItem (inherited from ContentItem)and AdItem (inherited from ContentItem). ContentItem should have all the features of holding an audio content, recording, play/pause audio,get_actual_audio_length. 2.) JS Classes/Objects that defines ContentTray. This class is ordered list of all the content items. This allows all content items to be stitched to form thefull show. The methods that this class will expose are something like this: get_full_content_length (this computed the total length of content),get_full_content (will return fully concatinated content item in a single audio track.) 3.) Player Controls for Recording & playing the content with full functionality to record highquality audio (through inbrowser web audio api). (You maynot worry about how the UI may look like , but just ensure there are basic buttons to test the features. 4.) Audio Visualizations: an api to generate the audio waveform in svg or any vector format. Ideally some feature to show the audio waveform inrealtime as the user is recording (much like the audio editing/recording softwares)
Sreenshot Non Functional Requirements:This should be a well architected & modular javascript code (You can use JQuery or frameworks that interoprate with it)Use JSON format where ever data needs to be transfered back to server.Resources: https://github.com/higuma/webaudiorecorderjs https://github.com/mattdiamond/Recorderjs https://github.com/willianjusten/awesomeaudiovisualizationSTRICTLY CONFIDENTIAL